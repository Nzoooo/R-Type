name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  linux_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: install-conan
        shell: bash
        run: pip install conan

      - name: Set and Update conan profile
        shell: bash
        run: |
          conan profile new default --detect
          echo [conf]\ntools.system.package_manager:sudo=True\ntools.system.package_manager:mode=install >> ~/.conan/profiles/default

      - name: build
        shell: bash
        run: |
          apt-get install libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-util-dev libxcb-util0-dev;
          export CONAN_SYSREQUIRES_MODE="enabled"
          export CONAN_SYSREQUIRES_SUDO="1"
          cmake -DCMAKE_C_COMPILER=/usr/bin/gcc-11 ${{ github.workspace }}
          cmake ${{ github.workspace }} -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build ${{ github.workspace }}/build
        
  windows_build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Install latest python version
        shell: powershell
        run: |
          python --version
          python.exe -m pip install --upgrade pip

      - name: Install conan
        shell: powershell
        run: pip install conan

      - name: Set and Update conan profile
        shell: powershell
        run: |
          conan profile new default --detect
          conan config set tools.system.package_manager:mode=install
        
      - name: Check for Dependencies (Install)
        shell: powershell
        run: |
          mkdir build
          cd build
          conan install .. --build=missing

      - name: Build Test windows
        shell: powershell
        run: |
          cd build
          cmake .. -G "Visual Studio 17"
          cmake --build . --config Release